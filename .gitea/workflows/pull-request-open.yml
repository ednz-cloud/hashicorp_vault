---
name: pull-requests-open
on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
    branches:
      - main

jobs:
  commit-history-check:
    name: Check commit compliance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Install commitizen
        run: pip3 install commitizen
        shell: bash
        working-directory: ./

      - run: git log origin/${{ github.event.pull_request.base.ref }}..

      - name: Verify commit message compliance
        run: |
          echo "cz check --rev-range origin/${{ gitea.event.pull_request.base.ref }}.."
          cz check --rev-range origin/${{ gitea.event.pull_request.base.ref }}..
        shell: bash
        working-directory: ./

  lint:
    name: Linting
    runs-on: ubuntu-latest
    needs: commit-history-check
    container:
      image: git.ednz.fr/container-factory/ansible-runner:act-latest
      credentials:
        username: ${{ secrets.ACTIONS_USER }}
        password: ${{ secrets.ACTIONS_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: "Ansible lint"
        run: ansible-lint --force-color
        working-directory: ${{ gitea.workspace }}

      - name: "YAML lint"
        run: yamllint . -f colored -c .yamllint
        working-directory: ${{ gitea.workspace }}

  molecule-test:
    name: Molecule tests
    runs-on: ubuntu-latest
    needs: lint
    container:
      image: git.ednz.fr/container-factory/ansible-runner:act-latest
      credentials:
        username: ${{ secrets.ACTIONS_USER }}
        password: ${{ secrets.ACTIONS_TOKEN }}
    strategy:
      matrix:
        test_os: [debian11, debian12, ubuntu2004, ubuntu2204, ubuntu2404]
        scenario: [default, with_acl_enabled]
    env:
      ANSIBLE_HOST_KEY_CHECKING: "false"
      ANSIBLE_FORCE_COLOR: "true"
      ANSIBLE_PYTHON_INTERPRETER: /usr/bin/python3
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: "Molecule test"
        run: molecule test -s ${{ matrix.scenario }}
        shell: bash
        working-directory: ${{ gitea.workspace }}
        env:
          MOLECULE_TEST_OS: ${{ matrix.test_os }}
