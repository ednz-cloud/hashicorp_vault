---
- name: Verify
  hosts: all
  gather_facts: true
  become: true
  tasks:
    - name: "Test: directory /etc/vault.d"
      block:
        - name: "Stat directory /etc/vault.d"
          ansible.builtin.stat:
            path: "/etc/vault.d"
          register: stat_etc_vault_d

        - name: "Stat file /etc/default/vault"
          ansible.builtin.stat:
            path: "/etc/default/vault"
          register: stat_etc_default_vault

        - name: "Stat file /etc/vault.d/vault.json"
          ansible.builtin.stat:
            path: "/etc/vault.d/vault.json"
          register: stat_etc_vault_d_vault_json

        - name: "Slurp file /etc/vault.d/vault.json"
          ansible.builtin.slurp:
            src: "/etc/vault.d/vault.json"
          register: slurp_etc_vault_d_vault_json

        - name: "Verify directory /etc/vault.d"
          ansible.builtin.assert:
            that:
              - stat_etc_vault_d.stat.exists
              - stat_etc_vault_d.stat.isdir
              - (stat_etc_vault_d.stat.uid | int) == 100
              - (stat_etc_vault_d.stat.gid | int) == 1000
              - stat_etc_vault_d.stat.mode == '0755'
              - stat_etc_default_vault.stat.exists
              - stat_etc_default_vault.stat.isreg
              - stat_etc_default_vault.stat.pw_name == 'root'
              - stat_etc_default_vault.stat.gr_name == 'root'
              - stat_etc_default_vault.stat.mode == '0600'
              - stat_etc_vault_d_vault_json.stat.exists
              - stat_etc_vault_d_vault_json.stat.isreg
              - (stat_etc_vault_d_vault_json.stat.uid | int) == 100
              - (stat_etc_vault_d_vault_json.stat.gid | int) == 1000
              - stat_etc_vault_d_vault_json.stat.mode == '0600'
              - slurp_etc_vault_d_vault_json.content != ''

    - name: "Test: directory /opt/vault"
      block:
        - name: "Stat directory /opt/vault"
          ansible.builtin.stat:
            path: "/opt/vault"
          register: stat_opt_vault

        - name: "Verify directory /opt/vault"
          ansible.builtin.assert:
            that:
              - stat_opt_vault.stat.exists
              - stat_opt_vault.stat.isdir
              - (stat_opt_vault.stat.uid | int) == 100
              - (stat_opt_vault.stat.gid | int) == 1000
              - stat_opt_vault.stat.mode == '0755'

    - name: "Test: service vault"
      block:
        - name: "Get service vault"
          ansible.builtin.service_facts:

        - name: "Stat file /etc/systemd/system/vault_container.service"
          ansible.builtin.stat:
            path: "/etc/systemd/system/vault_container.service"
          register: stat_etc_systemd_system_vault_container_service

        - name: "Slurp file /etc/systemd/system/vault_container.service"
          ansible.builtin.slurp:
            src: "/etc/systemd/system/vault_container.service"
          register: slurp_etc_systemd_system_vault_container_service

        - name: "Verify service vault"
          vars:
            expected_vault_service_file: |
              # Ansible managed: Do NOT edit this file manually!
              [Unit]
              After=docker.service
              PartOf=docker.service
              Requires=docker.service

              [Service]
              EnvironmentFile=/etc/default/vault
              ExecStartPre=-/usr/bin/docker rm -f vault
              ExecStart=/usr/bin/docker run --name vault \
              --rm \
              --env-file /etc/default/vault \
              --network "host" \
              --volume "/etc/vault.d:/vault/config" \
              --volume "/opt/vault:/vault/file" \
              --cap-add "IPC_LOCK" \
              hashicorp/vault:latest server
              ExecStop=/usr/bin/docker stop vault
              SyslogIdentifier=vault
              Restart=always
              RestartSec=10s

              [Install]
              WantedBy=docker.service
          ansible.builtin.assert:
            that:
              - stat_etc_systemd_system_vault_container_service.stat.exists
              - stat_etc_systemd_system_vault_container_service.stat.isreg
              - stat_etc_systemd_system_vault_container_service.stat.pw_name == 'root'
              - stat_etc_systemd_system_vault_container_service.stat.gr_name == 'root'
              - stat_etc_systemd_system_vault_container_service.stat.mode == '0644'
              - (slurp_etc_systemd_system_vault_container_service.content|b64decode) == expected_vault_service_file
              - ansible_facts.services['vault_container.service'] is defined
              - ansible_facts.services['vault_container.service']['source'] == 'systemd'
              - ansible_facts.services['vault_container.service']['state'] == 'running'
              - ansible_facts.services['vault_container.service']['status'] == 'enabled'

    - name: "Test: bootstrap vault cluster"
      block:
        - name: "Command vault operator init"
          community.docker.docker_container_exec:
            container: vault
            command: "vault operator init -non-interactive -key-shares=3 -key-threshold=2 -tls-skip-verify -format=json"
            env:
              VAULT_ADDR: "http://127.0.0.1:8200"
          changed_when: false
          register: vault_operator_init

    - name: "Test: unseal vault cluster"
      vars:
        vault_unseal_keys: "{{ vault_operator_init.stdout|from_json|json_query('unseal_keys_hex') }}"
      block:
        - name: "Command vault operator unseal"
          community.docker.docker_container_exec:
            container: vault
            command: "vault operator unseal -format=json -tls-skip-verify {{ vault_unseal_keys[0] }}"
            env:
              VAULT_ADDR: "http://127.0.0.1:8200"
          changed_when: false
          register: vault_operator_unseal_0

        - name: "Command vault operator unseal"
          community.docker.docker_container_exec:
            container: vault
            command: "vault operator unseal -format=json -tls-skip-verify {{ vault_unseal_keys[1] }}"
            env:
              VAULT_ADDR: "http://127.0.0.1:8200"
          changed_when: false
          register: vault_operator_unseal_1

        - name: "Verify vault operator unseal"
          vars:
            vault_seal_state_0: "{{ vault_operator_unseal_0.stdout|from_json|json_query('sealed') }}"
            vault_seal_state_1: "{{ vault_operator_unseal_1.stdout|from_json|json_query('sealed') }}"
          ansible.builtin.assert:
            that:
              - vault_seal_state_0
              - not vault_seal_state_1

    - name: "Test: vault interaction"
      vars:
        root_token: "{{ vault_operator_init.stdout|from_json|json_query('root_token') }}"
      block:
        - name: "Command vault secret enable"
          community.docker.docker_container_exec:
            container: vault
            command: "vault secrets enable -version=1 -tls-skip-verify kv"
            env:
              VAULT_ADDR: "http://127.0.0.1:8200"
              VAULT_TOKEN: "{{ root_token }}"
          changed_when: false
          register: vault_secret_enable

        - name: "Verify vault interaction"
          ansible.builtin.assert:
            that:
              - vault_secret_enable.stdout == 'Success! Enabled the kv secrets engine at: kv/'
